/// @docImport 'package:vid2pdf/utils/ffmpeg.dart';
library;

import 'dart:developer';
import 'dart:io';

import 'package:pdf/pdf.dart';
import 'package:pdf/widgets.dart' as pw;

import 'package:vid2pdf/utils/ffmpeg.dart';

/// Join a directory of image files into a PDF file whose path is specified by [outFile].
///
/// Source PNG files are assumed to exist & been generated by [extractFrames].
///
/// [frameFormat] may be used to specify the image type used when extracting frames.
Future<void> frames2pdf(
  String sourceDir,
  String outFile, {
  FrameFormat frameFormat = FrameFormat.png,
}) async {
  final outPdf = pw.Document();

  final members = await Directory(sourceDir).list().toList();
  log('Found ${members.length} frames');

  final sortedFrames =
      members
          .whereType<File>()
          .where((f) => f.path.toLowerCase().endsWith(frameFormat.extension))
          .toList()
        ..sort((a, b) => a.path.compareTo(b.path));
  log('Sorted ${members.length} matching frames');

  for (File f in sortedFrames) {
    final img = pw.MemoryImage(f.readAsBytesSync());

    outPdf.addPage(
      pw.Page(
        pageFormat: PdfPageFormat.a4.landscape,
        orientation: pw.PageOrientation.landscape,
        margin: pw.EdgeInsets.all(0),
        build: (pw.Context ctx) {
          return pw.Center(child: pw.Image(img));
        },
      ),
    );
  }

  await File(outFile).writeAsBytes(await outPdf.save());
}
